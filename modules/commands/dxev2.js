const path = require("path");
const { mkdirSync, writeFileSync, existsSync, createReadStream, readdirSync } = require("fs-extra")
const axios = require("axios")

module.exports.config = {
    name: "dxev2",
    version: "1.0.0",
    hasPermssion: 2,
    credits: "...",
    description: "ZingSpeedMobile tr√™n Messenger !",
    commandCategory: "Game",
    usages: "[]",
    cooldowns: 0
};


module.exports.onLoad = async () => {
    const dir = __dirname + `/Zing/datauser/`;
    const _dir = __dirname + `/Zing/datauser/`;
    const __dir = __dirname + `/Zing/cache/`;
    if (!existsSync(dir)) mkdirSync(dir, { recursive: true });
    if (!existsSync(_dir)) mkdirSync(_dir, { recursive: true });
    if (!existsSync(__dir)) mkdirSync(__dir, { recursive: true });
    return;
}

module.exports.checkPath = function (type, senderID) {
    const pathGame = path.join(__dirname, 'Zing', 'datauser', `${senderID}.json`);
    const pathGame_1 = require("./Zing/datauser/" + senderID + '.json');
    if (type == 1) return pathGame
    if (type == 2) return pathGame_1
}

module.exports.image = async function(link) {
    var images = [];
    let download = (await axios.get(link, { responseType: "arraybuffer" } )).data; 
        writeFileSync( __dirname + `/Zing/cache/zing.png`, Buffer.from(download, "utf-8"));
        images.push(createReadStream(__dirname + `/Zing/cache/zing.png`));
    return images
}

module.exports.run = async function ({ api, event, args, client,Threads,__GLOBAL, Users, Currencies,getText }) {
   const { senderID, messageID, threadID } = event;
     const axios = require('axios');
    const request = require('request');
    const fs = require('fs-extra');
    const pathData = path.join(__dirname, 'Zing', 'datauser', `${senderID}.json`);
    switch (args[0]) {
        case 'register':
        case '-r': {
            const nDate = new Date().toLocaleString('vi-VN', {
                timeZone: 'Asia/Ho_Chi_Minh'
            });
            if (!existsSync(pathData)) {
                var obj = {};
                obj.name = (await Users.getData(senderID)).name;
                obj.ID = senderID;
                obj.shield = 3
                obj.coins = 20000
                obj.Island = {};
                obj.Island.level = 1
                obj.Island.coinsLV = 200
                obj.Island.data = {};
                obj.Island.data.tower = 0
                obj.Island.data.tree = 0
                obj.Island.data.pool = 0
                obj.Island.data.pet = 0
                obj.spin = 20
                obj.timeRegister = nDate
                writeFileSync(pathData, JSON.stringify(obj, null, 4));
                return api.sendMessage("üöòƒêƒÉng k√≠ th√†nh c√¥ng ti·∫øn v√†o ƒë·∫•u tr∆∞·ªùng", threadID, messageID);
            } else return api.sendMessage("üöò B·∫°n ƒë√£ c√≥ trong c∆° s·ªü d·ªØ li·ªáu", threadID, messageID);

        }
        case 'spin': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: `B·∫°n ch∆∞a ƒëƒÉng k√≠ game!`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/lv_0_20220409194245.gif')}, threadID, messageID);
            }
            if(this.checkPath(2, senderID).spin == 0) return api.sendMessage('üöò B·∫°n ƒë√£ h·∫øt l∆∞·ª£t quay vui l√≤ng mua th√™m l∆∞·ª£t ho·∫∑c ƒë·ª£i 5phut ƒë·ªÉ h·ªá th·ªëng t·ª± t·∫∑ng b·∫°n th√™m l∆∞·ª£t quay', threadID, messageID);
            this.checkPath(2, senderID).spin = parseInt(this.checkPath(2, senderID).spin) - 1;
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(this.checkPath(2, senderID), null, 4));
            var items = [`${this.checkPath(2, senderID).Island.level * 1000} coins`, `${this.checkPath(2, senderID).Island.level * 3000} coins`, `${this.checkPath(2, senderID).Island.level * 5000} coins`, 'Ng√¢n H√†', 'ƒê√™m ƒëen', 'Kh·∫£i huy·ªÅn', '1 l∆∞·ª£t quay', '2 l∆∞·ª£t quay', '7 l∆∞·ª£t quay', '5 l∆∞·ª£t quay' , 'Tia ch·ªõp ƒëen'];
            var getItem = items[Math.floor(Math.random() * items.length)];
            var i = this.getSpin(items, getItem, senderID);
            api.sendMessage({body: `Ch√∫c m·ª´ng b·∫°n quay tr√∫ng : ${getItem}`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/img20181224105729783.jpg')}, threadID, messageID);
            await new Promise(resolve => setTimeout(resolve, 1000));
            const data = readdirSync(__dirname + `/Zing/datauser`);
            if(i == 3) {
                if(data.length < 4) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n Map ƒë·ªÉ ƒëua`, threadID, messageID);
                const dem = [];
                for (let i of data) { 
                    if(i != `${senderID}.json`) {
                        dem.push(require(`./Zing/datauser/${i}`));
                    }
                }
                dem.sort((a, b) => a.coins + b.coins);
                var msg = `S·ªë ti·ªÅn cao nh·∫•t l√†: ${dem[0].coins / 2}\n`
                const randomIndex = dem.sort(function() { return .5 - Math.random() });
                for(var i = 0; i < 3; i ++) {
                    msg += `${i+1}. ${randomIndex[i].name} - Xe c·∫•p ${randomIndex[i].Island.level}\n`
                }
                msg += 'Vui l√≤ng reply v·ªõi l·ª±a ch·ªçn b·∫°n mu·ªën l·∫•y xe c·ªßa ƒë·ªëi ph∆∞∆°ng'
                return api.sendMessage(`==========\n${msg}`, threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "steal",
                        dem,
                        randomIndex
                    })
                }, messageID);
            }
            else if(i == 5) {
                if(data.length < 4) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n server ƒë·ªÉ t·∫•n c√¥ng ng∆∞·ªùi ch∆°i`, threadID, messageID);
                var msgf = `[====ATTACK====]\n`, number = 1, p = [];
                for (let i of data) { 
                    if(i != `${senderID}.json`) {
                        var o = require(`./Zing/datauser/${i}`);
                        p.push(o)
                        msgf += `${number++}. ${o.name} - Map ${o.Island.level}\n`
                    }
                }
                return api.sendMessage(msgf, threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "attack",
                        p
                    })
                }, messageID);
            }
            break;
        }
        case 'build': 
        case 'xaydung': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/game-zingspeed-mobile.jpg')}, threadID, messageID);
            }
            var a = require(`./daorong/datauser/${senderID}.json`);
            return api.sendMessage(`üöò N√¢ng c·∫•p xe\n1.ƒê·ªông c∆° - ${a.Island.coinsLV * (a.Island.data.tower + 1)} coins (${a.Island.data.tower}/50)\n2.Truy·ªÅn ƒë·ªông - ${a.Island.coinsLV * (a.Island.data.tree + 1)} coins(${a.Island.data.tree}/50)\n3.Nhi√™n li·ªáu - ${a.Island.coinsLV * (a.Island.data.pool + 1)} coins (${a.Island.data.pool}/50)\n4.Nitro - ${a.Island.coinsLV * (a.Island.data.pet + 1)} coins (${a.Island.data.pet}/50)\n==============`, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "build"
                })
            }, messageID);
        }
        case 'shop': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "üöòB·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://imgur.com/bZqS5tx.jpg')}, threadID, messageID);
            }
     return api.sendMessage({body: `‚îÄ‚îÄ [ Shop ] ‚îÄ‚îÄ  \n\nüöò Danh S√°ch Xe ƒêua B·∫°n C√≥ Th·ªÉ Mua üöò\n1 - Ng√¢n H√†\n2 - ƒê√™m ƒêen\n3 - Kh·∫£i Huy·ªÅn\n4 - Tia Ch·ªõp ƒêen\n5 - Ranger\n6 - Th·ª£ SƒÉn\nüöò H√£y reply tin nh·∫Øn v√† k√®m theo s·ªë`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/e4cw4whmfk.gif')}, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "shop"
                })
            }, messageID);
        }
        case 'ƒë·∫•u': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "üöòB·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/img20181224105729783.jpg')}, threadID, messageID);
            }
     return api.sendMessage({body: `‚îÄ‚îÄ [ CH·ªåN MAP ] ‚îÄ‚îÄ  \n\n‚ù§Ô∏è Ch·ªçn map ƒë·ªÉ ƒëua\nüó∫1 - Thung L·ªßng Tuy·∫øt\nüó∫2 - ∆Ø·ªõp L·∫°nh\nüó∫3 - ƒê·∫£o Chim C√°nh C·ª•t\n`, attachment: await this.image(' https://sv3.anh365.com/images/2022/04/09/FB_IMG_1649510626569.jpg')}, threadID, (error, info) => {
                global.client.handleReply.push({
                    name: this.config.name,
                    messageID: info.messageID,
                    author: event.senderID,
                    type: "ƒë·∫•u"
                })
            }, messageID);
        }
        case 'me':
        case 'info': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://imgur.com/gWuh3JT.jpg')}, threadID, messageID);
            }
            var a = require(`./daorong/datauser/${senderID}.json`);
            return api.sendMessage(`üöò KHO ƒê·ªí N√ÇNG C·∫§P üöò\n- ... ${a.Island.level}\n- S·ªë l∆∞·ª£t quay c√≤n l·∫°i: ${a.spin}\n- Coins: ${a.coins}\n- Map:\n‚Ä¢ ... (${a.Island.data.tower}/50)\n‚Ä¢ ... (${a.Island.data.tree}/50)\n‚Ä¢ ... (${a.Island.data.pool}/50)\n‚Ä¢ ... (${a.Island.data.pet}/50)`, threadID, messageID);
        }
        case 'top': {
            if (!existsSync(pathData)) {
                return api.sendMessage({body: "B·∫°n ch∆∞a ƒëƒÉng k√≠ game!", attachment: await this.image('https://imgur.com/k3JyZfJ.jpg')}, threadID, messageID);
            }
            const data = readdirSync(__dirname + `/Zing/datauser`);
            if(data.length < 3) return api.sendMessage(`C·∫ßn √≠t nh·∫•t c√≥ 3 ng∆∞·ªùi ch∆°i tr√™n server ƒë·ªÉ xem top`, threadID, messageID);
            var p = []
            for (let i of data) { 
                var o = require(`./Zing/datauser/${i}`);
                p.push(o)
                msgf += `${number++}. ${o.name} - ƒê·∫£o level ${o.Island.level}\n`
            }
            p.sort((a, b) => b.Island.level - a.Island.level);
            var msg = '===TOP 3 NG∆Ø·ªúi LEVEL CAO NH·∫§T===\n'
            for(var i = 0; i < 3; i++) {
                msg += `${i+1}. ${p[i].name} v·ªõi level ${p[i].Island.level}\n`
            }
            return api.sendMessage(msg, threadID, messageID);
        }
        default: {
            return api.sendMessage({body: `===[ ZingSpeedMobile ]===\n¬ª R: ƒêƒÉng k√≠\n¬ª SPIN: V√≤ng quay game\n¬ª BUILD: N√¢ng c·∫•p xe\n¬ª SHOP: Shop mua xe\n¬ª INFO: Xem th√¥ng tin v·ªÅ b·∫°n\n¬ª TOP: Xem top level tr√™n server\n¬ª CHANGE: Quy ƒë·ªïi ti·ªÅn sang ti·ªÅn game v√† ng∆∞·ª£c l·∫°i\nƒê·∫§U`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/img20190413121232116.jpg')}, threadID, messageID);
        }
    }
}
module.exports.handleReply = async ({ event, api, Currencies, handleReply, Users, getText}) => {

  const { body, threadID, messageID, senderID } = event;
  const axios = require('axios');
  const request = require('request');
  const fs = require("fs");
    switch (handleReply.type) {
        case 'build': {
            var a = require(`./daorong/datauser/${senderID}.json`);
            var l = ['tower', 'tree', 'pool', 'pet']
            if(a.coins < a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1)) return api.sendMessage(`B·∫°n kh√¥ng ƒë·ªß s·ªë coins trong game ƒë·ªÉ x√¢y d·ª±ng!`, threadID, messageID);
            a.coins = a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1);
            await Currencies.decreaseMoney(senderID, a.Island.coinsLV * (a.Island.data[l[parseInt(body) - 1]] + 1));
            api.unsendMessage(handleReply.messageID)
            if(body == 1) {
                if(a.Island.data.tower == 50) return api.sendMessage('C·∫•p b·∫≠c xe n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ n√¢ng c·∫•p', threadID, messageID);
                a.Island.data.tower = a.Island.data.tower + 10;
                api.sendMessage(`N√¢ng c·∫•p th√†nh c√¥ng: ${a.Island.data.tower}/50`, threadID, messageID);
            }
            if(body == 2) {
                if(a.Island.data.tree == 50) return api.sendMessage('C·∫•p b·∫≠c xe n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ n√¢ng c·∫•p', threadID, messageID);
                a.Island.data.tree = a.Island.data.tree + 10;
                api.sendMessage(`N√¢ng c·∫•p th√†nh c√¥ng: ${a.Island.data.tree}/50`, threadID, messageID);
            }
            if(body == 3) {
                if(a.Island.data.pool == 50) return api.sendMessage(' C·∫•p b·∫≠c xe n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ n√¢ng c·∫•p', threadID, messageID);
                a.Island.data.pool = a.Island.data.pool + 10;
                api.sendMessage(`N√¢ng c·∫•p th√†nh c√¥ng: ${a.Island.data.pool}/50`, threadID, messageID);
            }
            if(body == 4) {
                if(a.Island.data.pet == 50) return api.sendMessage(' C·∫•p b·∫≠c xe n√†y ƒëang ·ªü m·ª©c t·ªëi ƒëa n√™n kh√¥ng th·ªÉ n√¢ng c·∫•p', threadID, messageID);
                a.Island.data.pet = a.Island.data.pet + 10;
                api.sendMessage(`N√¢ng c·∫•p th√†nh c√¥ng: ${a.Island.data.pet}/50`, threadID, messageID);
            }
            if(a.Island.data.tower == 50 && a.Island.data.tree == 50 && a.Island.data.pool == 50 && a.Island.data.pet == 50) {
                await new Promise(resolve => setTimeout(resolve, 1000));
                api.sendMessage(`N√¢ng c·∫•p c·ªßa b·∫°n ƒë√£ ƒë·∫°t ƒë∆∞·ª£c c·∫•p t·ªëi ƒëa!\nB·∫°n s·∫Ω ƒë∆∞·ª£c n√¢ng c·∫•p l√™n map ${(a.Island.level) + 1}`, threadID, messageID);
                a.Island.level = a.Island.level + 1;
                a.Island.coinsLV = a.Island.coinsLV + 100;
                a.Island.data.tower = 0;
                a.Island.data.tree = 0;
                a.Island.data.pool = 0;
                a.Island.data.pet = 0;
            }
            return writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
        }
        case 'shop': {
            if(body == 1) {
                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöò\n[üöò]T√™n :Ng√¢n H√†
üöò ƒê·∫∑c ƒëi·ªÉm: Ng√¢n H√† l√† xe ƒëua d√πng h·ªá th·ªëng ƒëi·ªÅu khi·ªÉn ti√™n ti·∫øn mang ƒë·∫øn kh·∫£ nƒÉng ph·∫£n ·ª©ng c·ª±c nh·∫°y\nüöòTuy·ªát chi√™u: Sau khi quay tr·ªü l·∫°i ƒë∆∞·ªùng ƒëua, nh·∫≠n ngay Mini Boost v√† tƒÉng 40% s·ª©c m·∫°nh duy tr√¨ 20 gi√¢y
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---Ngan-Ha.png')}, threadID, messageID);
            }
            else if(body == 2) {
                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöòÔ∏è\n[üöò]T√™n :ƒê√™m ƒêen
üöò ƒê·∫∑c ƒëi·ªÉm: Truy·ªÅn Thuy·∫øt ƒê√™m ƒêen v√¥ h√¨nh, m√£ l·ª±c m√°y ph√°t ƒë·ªông 6.5  si√™u m·∫°nh, s·ª± k·∫øt h·ª£p ho√†n h·∫£o t·∫°o n√™n b·∫£n lƒ©nh m·ªôt tuy·ªÉn th·ªß ƒëua ƒë·ªânh cao. \nüöòTuy·ªát chi√™u: 1. K·∫øt th√∫c th·ªùi gian ƒë·∫øm ng∆∞·ª£c khi xu·∫•t ph√°t, nh·∫≠n ngay 40% nƒÉng l∆∞·ª£ng Nitro.
2. Khi ƒë·ª•ng t∆∞·ªùng, nƒÉng l∆∞∆°ng Nitro b·∫£o l∆∞u 70%
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---Dem-Den.png')}, threadID, messageID);
            }
            else if(body == 3) {

                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöòÔ∏è\n[üöò]T√™n :Kh·∫£i Huy·ªÅn
üöò ƒê·∫∑c ƒëi·ªÉm: L·ªõp v·ªè ngo√†i b·∫±ng kim lo·∫°i si√™u c·ª©ng nh∆∞ ng∆∞·ªùi s·∫Øt bi·∫øn h√¨nh "b·∫•t kh·∫£ chi·∫øn b·∫°i" v·ªõi 4 ·ªëng x·∫£ c·ª±c m·∫°nh ƒë·ªÉ n√≥ c√≥ th·ªÉ tung ho√†nh t√πy √Ω.\n üöòTuy·ªát chi√™u: ƒê·ªïi h∆∞·ªõng ƒë∆∞·ªùng tr∆∞·ªùng (kh√¥ng d√πng Drift) s·∫Ω kh√¥ng b·ªã gi·∫£m t·ªëc ƒë·ªô.
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---Khai-Huyen.png')}, threadID, messageID);
             }
            else if(body == 4) {
                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöòÔ∏è\n[üöò]T√™n :Tia Ch·ªõp ƒêen
üöò ƒê·∫∑c ƒëi·ªÉm: Tia ch·ªõp ƒëen c√≥ ngo·∫°i h√¨nh xa hoa nh∆∞ c√°c d·∫°ng xe th·ªÉ thao n·ªïi ti·∫øng c√πng m·ªôt h·ªá th·ªëng ƒë·ªïi t·ªëc ƒë·ªô v√¥ c√πng m∆∞·ª£t m√† , k·ªπ thu·∫≠t m·∫° m√†u ƒë·ªôc quy·ªÅn l√†m cho c·∫£ xe l·∫Øp l√°nh nh∆∞ m·ªôt kh·ªëi v√†ng ƒëen.\nüöòTuy·ªát chi√™u: m·ªói l·∫ßn d√πng Boost 2 l·∫ßn, 25% + 3km/h t·ªëc ƒë·ªô cao nh·∫•t trong 4 gi√¢y.
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---tia-chp-den-2.jpg')}, threadID, messageID);
            }
            else if(body == 5) {
                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöòÔ∏è\n[üöò]T√™n : Ranger
üöò ƒê·∫∑c ƒëi·ªÉm: Thi·∫øt k·∫ø ph√° c√°ch, ƒëu√¥i xe ƒë∆∞·ª£c g·∫Øn thi·∫øt b·ªã c·∫£m ·ª©ng ƒëi·ªán quang. \nüöòTuy·ªát chi√™u: Hi·ªáu qu·∫£ tƒÉng t·ªëc ƒëu·ªïi theo +30% (t·∫•t ca c√°c xe kh√¥ng ph·∫£i h·∫°ng 1 ƒë·ªÅu c√≥ hi·ªáu ·ª©ng ƒëu·ªïi theo, ri√™ng hi·ªáu ·ª©ng tƒÉng t·ªëc c·ªßa Ranger m·∫°nh h∆°n. 
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---Ranger.png')}, threadID, messageID);
            }
            else if(body == 6) {
                return api.sendMessage({body: `üöòÔ∏è MUA TH√ÄNH C√îNG üöòÔ∏è
[üöò] T√™n: Th·ª£ SƒÉn
üöò ƒê·∫∑c ƒëi·ªÉm: Th·ª£ SƒÉn c√≥ m√†u xanh ƒë·∫∑c bi·ªát, tr√™n th√¢n xe m√†u xanh c√≤n c√≥ nhi·ªÅu hoa vƒÉn, th·ªÉ hi·ªán phong c√°ch c·ª±c ƒë·ªânh c·ªßa tay ƒëua. \nüöòTuy·ªát chi√™u: m·ªói l·∫ßn ƒë·ª•ng t∆∞·ªùng, c√≥ 60% x√°c xu·∫•t tƒÉng + 8m/h t·ªëc ƒë·ªô t·ªëi ƒëa, duy tr√¨ 12 gi√¢y
`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/A---Tho-Son.png')}, threadID, messageID);
            }
            else {
                return api.sendMessage('L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!', threadID, messageID);
            }
        }

         case 'mua': {
            if(body == 1) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë ti·ªÅn b·∫°n mu·ªën ƒë·ªïi! Chi·∫øt kh·∫•u 0%', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "botcoins"
                    })
                }, messageID);
            }
            else if(body == 2) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë ti·ªÅn b·∫°n mu·ªën ƒë·ªïi! Chi·∫øt kh·∫•u 0%', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "coinsbot"
                    })
                }, messageID);
            }
            else if(body == 3) {
                return api.sendMessage('Vui l√≤ng reply tin nh·∫Øn n√†y v·ªõi s·ªë l∆∞·ª£t quay b·∫°n mu·ªën mua! (10 l∆∞·ª£t quay 2000$)', threadID, (error, info) => {
                    global.client.handleReply.push({
                        name: this.config.name,
                        messageID: info.messageID,
                        author: event.senderID,
                        type: "spinn"
                    })
                }, messageID);
            }
            else {
                return api.sendMessage('L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!', threadID, messageID);
            }
        }
        case 'ƒë·∫•u': {
            if(body == 1) {
  var coindaorong = Math.floor(Math.random() * 80000) + 10000;
  var huhong = Math.floor(Math.random() * 90) + 20;
                return api.sendMessage({body: `üöòÔ∏è B·∫ÆT ƒê·∫¶U üöò\n[üó∫] MAPS: Thung l·ªßng tuy·∫øt.\n[üèÜ] Ch√∫c M·ª´ng b·∫°n ƒë√£ chi·∫øn th·∫Øng ƒë·ªëi th·ªß\n¬ª Gi·∫£i th∆∞·ªüng c·ªßa b·∫°n l√†: ${coindaorong}$\n¬ª Thua: ${huhong}%`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/zs50.gif')}, threadID, messageID);
        }
            else if(body == 2) {
               var coindaorong = Math.floor(Math.random() * 80000) + 10000;
  var huhong = Math.floor(Math.random() * 90) + 20;
                return api.sendMessage({body: `üöòÔ∏è B·∫ÆT ƒê·∫¶U üöòÔ∏è\n[üó∫] MAPS: ∆Ø·ªõp l·∫°nh.\n[üèÜ] Ch√∫c M·ª´ng b·∫°n ƒë√£ chi·∫øn th·∫Øng ƒë·ªëi th·ªß\n¬ª Gi·∫£i th∆∞·ªüng c·ªßa b·∫°n l√†: ${coindaorong}$\n¬ª Thua: ${huhong}%`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/zs50.gif')}, threadID, messageID);
        }
            else if(body == 3) {
   var coindaorong = Math.floor(Math.random() * 80000) + 10000;
  var huhong = Math.floor(Math.random() * 90) + 20;
                return api.sendMessage({body: `üöò B·∫ÆT ƒê·∫¶U üöòÔ∏è\n[üó∫] MAPS: ƒê·∫£o chim c√°nh c·ª•t.\n[üèÜ] Ch√∫c M·ª´ng b·∫°n ƒë√£ chi·∫øn th·∫Øng ƒë·ªëi th·ªß\n¬ª Gi·∫£i th∆∞·ªüng c·ªßa b·∫°n l√†: ${coindaorong}$\n¬ª Thua: ${huhong}%`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/zs50.gif')}, threadID, messageID);
            }
            else if(body == 4) {
   var coindaorong = Math.floor(Math.random() * 80000) + 10000;
  var huhong = Math.floor(Math.random() * 90) + 20;
                return api.sendMessage({body: `üöò B·∫ÆT ƒê·∫¶U üöòÔ∏è\n[üó∫] MAPS: ATLANTIS.\n[üèÜ] Ch√∫c M·ª´ng b·∫°n ƒë√£ chi·∫øn th·∫Øng ƒë·ªëi th·ªß\n¬ª Gi·∫£i th∆∞·ªüng c·ªßa b·∫°n l√†: ${coindaorong}$\n¬ª Thua: ${huhong}%`, attachment: await this.image('https://sv3.anh365.com/images/2022/04/09/zs50.gif')}, threadID, messageID);
            }
          }
        case 'spinn': {
            await checkMoney(senderID, parseInt(body));
            api.unsendMessage(handleReply.messageID)
            await Currencies.decreaseMoney(senderID, parseInt(body));
            a.spin = a.spin + parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`Mua th√†nh c√¥ng ${body} l∆∞·ª£t quay (${parseInt(body) * 200}$`, threadID, messageID);
        }
        case 'botcoins': {
            var a = require(`./Zing/datauser/${senderID}.json`);
            await checkMoney(senderID, parseInt(body));
            api.unsendMessage(handleReply.messageID)
            await Currencies.decreaseMoney(senderID, parseInt(body));
            a.coins = a.coins + parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`N·∫°p th√†nh c√¥ng ${body} coins v√†o game!`, threadID, messageID);
        }
        case 'coinsbot': {
            var a = require(`./Zing/datauser/${senderID}.json`);
            if(a.coins < parseInt(body)) return api.sendMessage('B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch n√†y!', threadID, messageID);
            api.unsendMessage(handleReply.messageID)
            await Currencies.increaseMoney(senderID, parseInt(body));
            a.coins = a.coins - parseInt(body)
            writeFileSync(this.checkPath(1, senderID), JSON.stringify(a, null, 4));
            return api.sendMessage(`R√∫t th√†nh c√¥ng ${body} coins v·ªÅ t√†i kho·∫£n bot!`, threadID, messageID);
        }
    }
    async function checkMoney(senderID, maxMoney) {
        var i, w;
        i = (await Currencies.getData(senderID)) || {};
        w = i.money || 0
        if (w < parseInt(maxMoney)) return api.sendMessage('B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch n√†y!', threadID, messageID);
    }
}
module.exports.getSpin = function (items, getItem, senderID) {
    const path = this.checkPath(1, senderID)
    var pathData = this.checkPath(2, senderID)
    var i = items.findIndex(index => index == getItem);
    if(i == 0) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 1000
    if(i == 1) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 3000
    if(i == 2) pathData.coins = parseInt(pathData.coins) + pathData.Island.level * 5000
    if(i == 4) {
        if(pathData.shield != 3) {
            pathData.spin = parseInt(pathData.spin) + 1
            pathData.shield = parseInt(pathData.shield) + 1;
        }
    }
    if(i == 6) pathData.spin = parseInt(pathData.spin) + 1
    if(i == 7) pathData.spin = parseInt(pathData.spin) + 2
    if(i == 8) pathData.spin = parseInt(pathData.spin) + 5
    writeFileSync(path, JSON.stringify(pathData, null, 4));
    return i
        }